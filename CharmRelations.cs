using System;
using System.Collections.Generic;

namespace CharmChangerRando
{
    public class CharmRelations
    {
        public static Dictionary<string, (bool positive, string reference, Charms charm)> Relations = new()
        {
            { "grubsongDamageSoul", (true, null, Charms.GrubSong) },
            { "grubsongDamageSoulCombo", (true, null, Charms.GrubSong) },
            { "regularInvulnerability", (true, null, Charms.NullCharm) },
            { "regularRecoil", (false, null, Charms.NullCharm) },
            { "stalwartShellInvulnerability", (true, "regularInvulnerability", Charms.StallwartShell) },
            { "stalwartShellRecoil", (false, "regularRecoil", Charms.StallwartShell) },
            { "baldurShellKnockbackMult", (false, null, Charms.BaldurShell) },
            { "baldurShellBlocks", (true, null, Charms.BaldurShell) },
            { "furyOfTheFallenJonis", (true, null, Charms.FuryOfTheFallen) },
            { "furyOfTheFallenHealth", (true, null, Charms.FuryOfTheFallen) },
            { "furyOfTheFallenScaling", (true, null, Charms.FuryOfTheFallen) },
            { "regularFocusTime", (false, null, Charms.NullCharm) },
            { "quickFocusFocusTime", (false, "regularFocusTime", Charms.QuickFocus) },
            { "deepFocusHealingTimeScale", (false, null, Charms.Deepfocus) },
            { "regularFocusHealing", (true, null, Charms.NullCharm) },
            { "deepFocusHealing", (true, "regularFocusHealing", Charms.Deepfocus) },
            { "lifebloodHeartLifeblood", (true, null, Charms.LifebloodHeart) },
            { "lifebloodCoreLifeblood", (true, null, Charms.LifebloodCore) },
            { "defendersCrestDiscount", (true, null, Charms.DefendersCreast) },
            { "defendersCrestCloudFrequency", (true, null, Charms.DefendersCreast) },
            { "defendersCrestDamageRate", (false, null, Charms.DefendersCreast) },
            { "flukenestDamage", (true, null, Charms.Flukenest) },
            { "flukenestShamanStoneDamage", (true, "flukenestDamage", Charms.Flukenest) },
            { "flukenestVSFlukes", (true, null, Charms.Flukenest) },
            { "flukenestSSFlukes", (true, "flukenestVSFlukes", Charms.Flukenest) },
            { "flukenestFlukeSizeMin", (true, null, Charms.Flukenest) },
            { "flukenestFlukeSizeMax", (true, "flukenestFlukeSizeMin", Charms.Flukenest) },
            { "flukenestShamanStoneFlukeSizeMin", (true, "flukenestFlukeSizeMin", Charms.Flukenest) },
            { "flukenestShamanStoneFlukeSizeMax", (true, "flukenestShamanStoneFlukeSizeMin", Charms.Flukenest) },
            { "flukenestDefendersCrestDamageRate", (false, "defendersCrestDamageRate", Charms.Flukenest) },
            { "flukenestDefendersCrestShamanStoneDamageRate", (false, "flukenestDefendersCrestDamageRate", Charms.Flukenest) },
            { "thornsOfAgonyDamageMultiplier", (true, null, Charms.ThornsOfAgony) },
            { "longnailMarkOfPrideWallSlash", (false, null, Charms.Longnail) },
            { "longnailMarkOfPrideScale", (true, "markOfPrideScale", Charms.Longnail) },
            { "markOfPrideScale", (true, "longnailScale", Charms.MarkOfPride) },
            { "longnailScale", (true, null, Charms.Longnail) },
            { "heavyBlowWallSlash", (false, "regularSlashRecoil", Charms.HeavyBlow) },
            { "heavyBlowCycloneSlash", (true, "regularCycloneSlashRecoil", Charms.HeavyBlow) },
            { "regularSlashRecoil", (true, null, Charms.NullCharm) },
            { "regularGreatSlashRecoil", (true, null, Charms.NullCharm) },
            { "regularCycloneSlashRecoil", (true, null, Charms.NullCharm) },
            { "heavyBlowSlashRecoil", (true, "regularSlashRecoil", Charms.HeavyBlow) },
            { "heavyBlowGreatSlashRecoil", (true, "regularGreatSlashRecoil", Charms.HeavyBlow) },
            { "heavyBlowCycloneSlashRecoil", (true, "regularCycloneSlashRecoil", Charms.HeavyBlow) },
            { "heavyBlowStagger", (true, null, Charms.HeavyBlow) },
            { "heavyBlowStaggerCombo", (true, null, Charms.HeavyBlow) },
            { "SharpShadowDamageMultiplier", (true, null, Charms.SharpShadow) },
            { "SharpShadowDashmasterDamageIncrease", (true, null, Charms.SharpShadow) },
            { "SharpShadowDashSpeed", (true, null, Charms.SharpShadow) },
            { "sporeShroomDamageResetsCooldown", (true, null, Charms.SporeShroom) },
            { "sporeShroomCooldown", (false, null, Charms.SporeShroom) },
            { "sporeShroomCloudDuration", (true, null, Charms.SporeShroom) },
            { "sporeShroomDamageRate", (false, null, Charms.SporeShroom) },
            { "sporeShroomDefendersCrestDamageRate", (false, "sporeShroomDamageRate", Charms.SporeShroom) },
            { "regularVSSizeScaleX", (true, null, Charms.NullCharm) },
            { "regularVSSizeScaleY", (true, null, Charms.NullCharm) },
            { "regularSSSizeScaleX", (true, "regularVSSizeScaleX", Charms.NullCharm) },
            { "regularSSSizeScaleY", (true, "regularVSSizeScaleY", Charms.NullCharm) },
            { "shamanStoneVSSizeScaleX", (true, "regularVSSizeScaleX", Charms.ShamanStone) },
            { "shamanStoneVSSizeScaleY", (true, "regularVSSizeScaleY", Charms.ShamanStone) },
            { "shamanStoneSSSizeScaleX", (true, "shamanStoneVSSizeScaleX", Charms.ShamanStone) },
            { "shamanStoneSSSizeScaleY", (true, "shamanStoneVSSizeScaleY", Charms.ShamanStone) },
            { "regularVSDamage", (true, null, Charms.NullCharm) },
            { "regularSSDamage", (true, "regularVSDamage", Charms.NullCharm) },
            { "regularHWDamage", (true, null, Charms.NullCharm) },
            { "regularASDamage", (true, "regularHWDamage", Charms.NullCharm) },
            { "regularDiveDamage", (true, null, Charms.NullCharm) },
            { "regularDDiveDamage", (true, null, Charms.NullCharm) },
            { "regularDDarkDamageL", (true, null, Charms.NullCharm) },
            { "regularDDarkDamageR", (true, null, Charms.NullCharm) },
            { "regularDDarkDamageMega", (true, null, Charms.NullCharm) },
            { "shamanStoneVSDamage", (true, "regularVSDamage", Charms.ShamanStone) },
            { "shamanStoneSSDamage", (true, "regularSSDamage", Charms.ShamanStone) },
            { "shamanStoneHWDamage", (true, "regularHWDamage", Charms.ShamanStone) },
            { "shamanStoneASDamage", (true, "regularASDamage", Charms.ShamanStone) },
            { "shamanStoneDiveDamage", (true, "regularDiveDamage", Charms.ShamanStone) },
            { "shamanStoneDDiveDamage", (true, "regularDDiveDamage", Charms.ShamanStone) },
            { "shamanStoneDDarkDamageL", (true, "regularDDarkDamageL", Charms.ShamanStone) },
            { "shamanStoneDDarkDamageR", (true, "regularDDarkDamageR", Charms.ShamanStone) },
            { "shamanStoneDDarkDamageMega", (true, "regularDDarkDamageMega", Charms.ShamanStone) },
            { "regularSoul", (true, null, Charms.NullCharm) },
            { "regularReservesSoul", (true, null, Charms.NullCharm) },
            { "soulCatcherSoul", (true, "regularSoul", Charms.SoulCatcher) },
            { "soulCatcherReservesSoul", (true, "regularReservesSoul", Charms.SoulCatcher) },
            { "soulEaterSoul", (true, "soulCatcherSoul", Charms.SoulEater) },
            { "soulEaterReservesSoul", (true, "soulCatcherReservesSoul", Charms.SoulEater) },
            { "glowingWombSpawnRate", (false, null, Charms.GlowingWomb) },
            { "glowingWombSpawnCost", (false, null, Charms.GlowingWomb) },
            { "glowingWombSpawnTotal", (true, null, Charms.GlowingWomb) },
            { "glowingWombDamage", (true, null, Charms.GlowingWomb) },
            { "glowingWombFuryOfTheFallenDamage", (true, "glowingWombDamage", Charms.GlowingWomb) },
            { "glowingWombDefendersCrestDamage", (true, "glowingWombDamage", Charms.GlowingWomb) },
            { "glowingWombDefendersCrestDamageRate", (false, null, Charms.GlowingWomb) },
            { "fragileCharmsBreak", (false, null, Charms.NullCharm) },
            { "greedGeoIncrease", (true, null, Charms.FragileGreed) },
            { "strengthDamageIncrease", (true, null, Charms.FragileStrength) },
            { "regularChargeTime", (false, null, Charms.NullCharm) },
            { "nailmastersGloryChargeTime", (false, "regularChargeTime", Charms.NailmastersGlory) },
            { "jonisBlessingScaling", (true, null, Charms.JonisBlessing) },
            { "shapeOfUnnSpeed", (true, null, Charms.ShapeOfUnn) },
            { "shapeOfUnnQuickFocusSpeed", (true, "shapeOfUnnSpeed", Charms.ShapeOfUnn) },
            { "hivebloodTimer", (false, null, Charms.HiveBlood) },
            { "hivebloodJonisTimer", (false, "hivebloodTimer", Charms.HiveBlood) },
            { "regularDreamSoul", (true, null, Charms.NullCharm) },
            { "dreamWielderSoulGain", (true, "regularDreamSoul", Charms.DreamWielder) },
            { "dreamWielderEssenceChanceLow", (false, "dreamWielderEssenceChanceHigh", Charms.DreamWielder) },
            { "dreamWielderEssenceChanceHigh", (false, null, Charms.DreamWielder) },
            { "dashmasterDownwardDash", (true, null, Charms.Dashmaster) },
            { "regularDashCooldown", (false, null, Charms.NullCharm) },
            { "dashmasterDashCooldown", (false, "regularDashCooldown", Charms.Dashmaster) },
            { "regularAttackCooldown", (false, null, Charms.NullCharm) },
            { "quickSlashAttackCooldown", (false, "regularAttackCooldown", Charms.QuickSlash) },
            { "regularSpellCost", (false, null, Charms.NullCharm) },
            { "spellTwisterSpellCost", (false, "regularSpellCost", Charms.SpellTwister) },
            { "grubberflysElegyJoniBeamDamageBool", (false, null, Charms.GrubberflysElegy) },
            { "grubberflysElegyDamageScale", (true, null, Charms.GrubberflysElegy) },
            { "grubberflysElegyFuryOfTheFallenScaling", (true, "grubberflysElegyDamageScale", Charms.GrubberflysElegy) },
            { "grubberflysElegyMarkOfPrideScale", (true, null, Charms.GrubberflysElegy) },
            { "kingsoulSoulGain", (true, null, Charms.Kingsoul) },
            { "kingsoulSoulTime", (false, null, Charms.Kingsoul) },
            { "regularWalkSpeed", (true, null, Charms.NullCharm) },
            { "regularSpeed", (true, null, Charms.NullCharm) },
            { "sprintmasterSpeed", (true, "regularSpeed", Charms.Sprintmaster) },
            { "sprintmasterSpeedCombo", (true, "sprintmasterSpeed", Charms.Sprintmaster) },
            { "dreamshieldNoise", (false, null, Charms.Dreamshield) },
            { "dreamshieldDamageScale", (true, null, Charms.Dreamshield) },
            { "dreamshieldReformationTime", (false, null, Charms.Dreamshield) },
            { "dreamshieldSizeScale", (true, null, Charms.Dreamshield) },
            { "dreamshieldDreamWielderSizeScale", (true, "dreamshieldSizeScale", Charms.Dreamshield) },
            { "dreamshieldSpeed", (true, null, Charms.Dreamshield) },
            { "dreamshieldFocusSpeed", (true, "dreamshieldSpeed", Charms.Dreamshield) },
            { "weaversongCount", (true, null, Charms.Weaversong) },
            { "weaversongDamage", (true, null, Charms.Weaversong) },
            { "weaversongSpeedMin", (true, null, Charms.Weaversong) },
            { "weaversongSpeedMax", (true, "weaversongSpeedMin", Charms.Weaversong) },
            { "weaversongSpeedSprintmaster", (true, null, Charms.Weaversong) },
            { "weaversongGrubsongSoul", (true, null, Charms.Weaversong) },
            { "grimmchildDamage2", (true, null, Charms.Grimmchild) },
            { "grimmchildDamage3", (true, "grimmchildDamage2", Charms.Grimmchild) },
            { "grimmchildDamage4", (true, "grimmchildDamage3", Charms.Grimmchild) },
            { "grimmchildAttackTimer", (false, null, Charms.Grimmchild) },
            { "carefreeMelodyChance1", (true, null, Charms.Grimmchild) },
            { "carefreeMelodyChance2", (true, "carefreeMelodyChance1", Charms.Grimmchild) },
            { "carefreeMelodyChance3", (true, "carefreeMelodyChance2", Charms.Grimmchild) },
            { "carefreeMelodyChance4", (true, "carefreeMelodyChance3", Charms.Grimmchild) },
            { "carefreeMelodyChance5", (true, "carefreeMelodyChance4", Charms.Grimmchild) },
            { "carefreeMelodyChance6", (true, "carefreeMelodyChance5", Charms.Grimmchild) },
            { "carefreeMelodyChance7", (true, "carefreeMelodyChance6", Charms.Grimmchild) }
        };
    }
}
